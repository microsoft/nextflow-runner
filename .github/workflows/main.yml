# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Nextflow-Runner API

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'NextflowRunnerClient/**'
  workflow_dispatch:

env:
  BUILDCONFIGURATION: 'Release'
  AZURE_SUBSCRIPTION_ID: '9169421f-8238-4d23-a41e-93319a3a3fbb'
  AZURE_RESOURCE_GROUP: 'genom-dev-nfr-rg'

jobs:
  build:
    name: Build - NextflowRunner.API
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true

    - name: Build API
      run: dotnet build ./NextflowRunner.API --configuration ${{env.BUILDCONFIGURATION}}

    - name: Build DACPAC
      run: dotnet build ./NextflowRunnerDB.Build --configuration ${{env.BUILDCONFIGURATION}}

    - name: Build Serverless
      run: dotnet build ./NextflowRunner.Serverless --configuration ${{env.BUILDCONFIGURATION}}

    - name: create API artifact
      run: dotnet publish ./NextflowRunner.API -c ${{env.BUILDCONFIGURATION}} -o ${{env.DOTNET_ROOT}}/myapp

    - name: create Serverless artifact
      run: dotnet publish ./NextflowRunner.Serverless -c ${{env.BUILDCONFIGURATION}} -o ${{env.DOTNET_ROOT}}/functions

    - name: Upload API artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: .net-app
        path: ${{env.DOTNET_ROOT}}/myapp

    - name: Upload Serverless artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: func-app
        path: ${{env.DOTNET_ROOT}}/functions

    - name: Upload DB artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: database
        path: './NextflowRunnerDB.Build/bin/**/*.dacpac'

  provision:
    name: Provision Azure Resources
    runs-on: ubuntu-latest    
    outputs:
      azure-webapp-name: ${{ steps.deploy-bicep.outputs.appServiceAppName }}
      function-app-name: ${{ steps.deploy-bicep.outputs.functionAppName }}
      sqlserver: ${{ steps.deploy-bicep.outputs.sqlServerName }}
      sqlfqdn: ${{ steps.deploy-bicep.outputs.sqlServerFQDN }}
      dbname: ${{ steps.deploy-bicep.outputs.sqlDbName }}
      sqluser: ${{ steps.deploy-bicep.outputs.sqlUserName }}
    steps:                
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }}
    
    # Checkout
    - name: Checkout
      uses: actions/checkout@v1
        
    # Deployment of template    
    - name: Deploy BICEP Template
      id: deploy-bicep
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
        template: ./templates/main.bicep  # Set this to the location of your template file
        parameters: 'environmentType=nonprod azureClientId="${{ secrets.AZURE_CLIENTID }}" azureClientSecret=${{ secrets.AZURE_CLIENTSECRET }} sqlAdminPassword=${{ secrets.SQL_ADMIN_PASSWORD }} storagePassphrase=${{ secrets.STORAGE_PASSPHRASE }} keyvaultSpnObjectId=${{ secrets.KV_SPN_OBJECTID }}' 

  deploy_database:
    name: Deploy DACPAC
    runs-on: windows-latest
    needs: [build, provision]
    environment:
      name: 'production'    

    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Download database artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: database
        path: ${{ github.workspace }}/database
    
    - uses: Azure/sql-action@v1
      with:
        server-name: ${{ needs.provision.outputs.sqlfqdn }}
        connection-string: 'Server=tcp:${{ needs.provision.outputs.sqlfqdn }},1433;Initial Catalog=${{ needs.provision.outputs.dbname }};Persist Security Info=False;User ID=${{ needs.provision.outputs.sqluser }};Password=${{ secrets.SQL_ADMIN_PASSWORD }};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;'
        dacpac-package: '**/*.dacpac'

    - name: logout
      run: |
        az logout

  deploy_webapp:
    name: Deploy NextflowRunner.API
    runs-on: ubuntu-latest
    needs: [build, provision]
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Download API artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: .net-app
        path: ${{ github.workspace }}/webapp    

    - name: Download Serverless artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: func-app
        path: ${{ github.workspace }}/funcapp 

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ needs.provision.outputs.azure-webapp-name }}
        package: ./webapp

    - name: 'Deploy to Function App'
      uses: Azure/functions-action@v1
      id: deploy-to-funcapp
      with:
        app-name: ${{ needs.provision.outputs.function-app-name }}
        package: ./funcapp

    - name: logout
      run: |
        az logout